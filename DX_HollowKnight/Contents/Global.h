#pragma once
#include <EngineBase/EngineMath.h>
#include <EngineCore/SpriteRenderer.h>
#include "ContentsRenderer.h"

class UContentsFunction
{
public:

};

enum class EUIOrder
{
	NONE = -10000,
	FADE = 1,
	BACK = 9999,
	MAX = 10000,
};

enum class EZOrder
{
	NONE = 1,
	HitParticleEffect = 700,
	KNIGHT_SKILL_FRONT = 800,
	MONSTER_SKILL_FRONT = 850,
	PLAYER = 900,
	MONSTER = 910,
	KNIGHT_STUN_EFFECT = 930,
	KNIGHT_SKILL_BACK = 950,
	MONSTER_SKILL_BACK = 1000,
	BACKGROUND = 1100,
	PIXELCOLLISION = 3999,
	MAX
};

enum EMapObjectType
{
	BACKGROUND_COLOR,
	BACKGROUND_OBJECT,
	COLLISION_OBJECT,
	NONE_COLLISION_OBJECT,
	MAX
};

enum class EKnightState
{
	IDLE,
	RUN,
	IDLE_TO_RUN,
	RUN_TO_IDLE,
	DASH,
	JUMP,
	AIRBORN,
	LAND,
	HARD_LAND,

	LOOK_DOWN,
	LOOK_DOWN_LOOP,
	LOOK_UP,
	LOOK_UP_LOOP,

	SLASH,
	UP_SLASH,
	DOWN_SLASH,

	FOCUS,
	FOCUS_GET,
	FOCUS_END,
	FIREBALL_ANTIC,
	FIREBALL_CAST,

	STUN,

	DEATH,
	DEATH_DAMAGE,
	DEATH_HEAD,
	MAX
};

enum class EMonsterState
{
	IDLE,
	WALK,
	RUN,
	TURN,

	JUMP_ANTICIPATE,
	JUMP,
	JUMP_ATTACK_ANTICIPATE,
	JUMP_ATTACK,
	LAND,
	HARD_LAND,

	DASH_ARRIVE,
	DASH_ANTICIPATE,
	DASH,
	DASH_ATTACK,
	DASH_RECOVERY,

	ATTACK_ANTICIPATE,
	ATTACK,
	ATTACK_RECOVERY,

	THROW_ANTICIPATE,
	THROW,
	THROW_RECOVERY,

	WALL_ANTICIPATE,
	WALL,
	WALL_ATTACK,
	WALL_RECOVERY,

	COUNTER_ANTICIPATE,
	COUNTER_STANCE,
	COUNTER,
	COUNTER_ATTACK,
	COUNTER_ATTACK_RECOVERY,
	COUNTER_RECOVERY,

	EVADE_ANTICIPATE,
	EVADE,

	SHIELD_ANTICIPATE,
	SHIELD_FRONT,
	SHIELD_FRONT_BUMP,
	SHIELD_TOP,
	SHIELD_TOP_BUMP,
	
	HIT,

	STUN,
	STUN_ROLL,
	STUN_ROLL_END,
	STUN_OPEN,
	STUN_HIT,

	DEATH_AIR,
	DEATH_LAND,

	FLY,
	FIRE,
	BURST,
	MAX
};
